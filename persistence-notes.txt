

There is an object/service for each of the main domain object types and most
behavior is methods on those handles;

All values are kept both in-memory and in-database;

All values are consistent; in-memory values change only on a successful change
to the database;
_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^
ALL OF THE ABOVE PLAN IS COMPLETE

Appropriate handles are goroutine-safe, implemented using a message-over-chan
-nel pattern.  
_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^_-^
NONE OF THE IMMEDIATELY PRECEDING IS COMPLETE

THE IMMEDIATELY FOLLOWING IS THE RIGHT WAY TO ACHIEVE THE IMMEDIATELY PRECEDING
V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/V\/

Access pattern:
===========================================================================
Almost all meaningful mutation of game objects will occur through a call into a
Game; if calls into a Game are sequentialized via a channel, this means all
other modifications are safe.



